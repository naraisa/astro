---
import Welcome from '../components/Welcome.astro';
import Layout from '../layouts/Layout.astro';
import { dateFormat } from '../utils/dateFormat';
import PageNavi from "../components/PageNation.astro";

const title = 'Homepage';
const description = 'Welcome to our homepage!';

//microCMS呼び出し
import { getBlogs, getCategory, getAllItemList } from "../library/microcms";
// 最新10件
let response = await getBlogs({ fields: ["id", "title", "publishedAt", "eyecatch", "category"] });
// 全件の場合
const all = await getAllItemList ({
  fields: ["id", "title", "publishedAt", "eyecatch", "category"]
});
// カテゴリ一覧
const category = await getCategory();

// 最新5件へ
response.contents = response.contents.slice(0,5);
---

<Layout title={ title } description={ description }>
  <div class="mv">
    Home
  </div>
  <div class="">
    <ul class="tags">
    {
      category.contents.map((record: any) => (
        <li><a href={`/category/${record.id}`} class="mini-tag">{record.name}</a></li>
      ))
    }
    </ul>
  </div>
  <div>
    <hr>
  </div>
  <ul class="list">
    {
      response.contents.map((content: any) => (
      // all.map((content: any) => (
        <li>
          <p style="width: 100%;">{dateFormat(content.publishedAt)}</p>
          {
            content.category && (
              <div class="tag-wrap"><a href={`/category/${content.category.id}`} class="tag">{content.category.name}</a></div>
            )
          }
          <a href={`/${content.id}`}>
            <p>{content.title}</p>
            <div class="thumb">
              {content.eyecatch && (
                <img src={content.eyecatch.url} alt="サムネイル" />
              )}
            </div>
          </a>
        </li>
      ))
    }
  </ul>
  <div class="more">
    <a href="/news" class="">MORE</a>
  </div>
</Layout>


<style scoped>
  .thumb {
    width: 100px;
    height: 100px;
    overflow: hidden;
  }
  .thumb img {
    object-fit: contain;
    width: 100%;
  }

  .mv {
    height: 20vh;
    display: flex;
    align-items: center;
    padding: 3rem;
    font-size: 200%;
    background-color: cadetblue;
    color: white;
  }

  .tags {
    display: flex;
    gap: 15px;
  }

  .mini-tag {
    text-decoration: none;
    color: #333;
    border: solid 1px #555;
    border-radius: 0.4em;
    font-size: 80%;
    padding: 0.2em .8em;
  }

  .more {
    display: flex;
    justify-content: center;
    padding: 0 0 2em 0;

    a {
      display: flex;
      width: 50%;
      max-width: 20em;
      height: 3em;
      background-color: cadetblue;
      color: #fff;
      justify-content: center;
      align-items: center;
      text-decoration: none;
    }
  }

</style>


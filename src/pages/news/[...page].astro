---
import Layout from '../../layouts/Layout.astro';
import { dateFormat } from '../../utils/dateFormat';
import PageNavi from "../../components/PageNation.astro";
import type { itemListSingleType } from "../../types/api";

const title = 'Homepage';
const description = 'Welcome to our homepage!';

//microCMS呼び出し
import { getBlogs, getCategory, getAllItemList } from "../../library/microcms";

const PER_PAGE = 10;

export async function getStaticPaths({ paginate }: any) {
  const response = await getAllItemList({
    fields: ["id", "title", "publishedAt", "eyecatch", "category"],
  });
  const list = response;
  //paginate()関数を使う
  return paginate(list, { pageSize: 10 });
}

//受け取る型
// interface Props {
//   page: {
//     data: itemListSingleType[];
//     start: number;
//     end: number;
//     size: number;
//     total: number;
//     currentPage: number;
//     lastPage: number;
//     url: {
//       current: string;
//       next: string;
//       prev: string;
//     };
//   };
// }

const { page } = Astro.props;
const response = await getBlogs({ fields: ["id", "title", "publishedAt", "eyecatch", "category"] });
const category = await getCategory();
// const all = await getAllItemList ({
//   fields: ["id", "title", "publishedAt", "eyecatch", "category"]
// });
---

<Layout title={ title } description={ description }>
  <div class="mv">
    News
  </div>
  <div class="">
    <ul class="tags">
    {
      category.contents.map((record: any) => (
        <li><a href={`/category/${record.id}`} class="mini-tag">{record.name}</a></li>
      ))
    }
    </ul>
  </div>
  <div>
    <hr>
  </div>
  <div class="state">
    <p>{`全部で${page.lastPage}ページ`}</p>
    <p>{`いま${page.currentPage}ページ目です`}</p>
  </div>
  <ul class="list">
    {
      page.data.map((content: any) => (
      // all.map((content: any) => (
        <li>
          <p style="width: 100%;">{dateFormat(content.publishedAt)}</p>
          {
            content.category && (
              <div class="tag-wrap"><a href={`/category/${content.category.id}`} class="tag">{content.category.name}</a></div>
            )
          }
          <a href={`/${content.id}`}>
            <p>{content.title}</p>
            <div class="thumb">
              {content.eyecatch && (
                <img src={content.eyecatch.url} alt="サムネイル" />
              )}
            </div>
          </a>
        </li>
      ))
    }
  </ul>
  {page && <PageNavi url="/news" itemList={page} />}
</Layout>


<style scoped>
  .state {
    width: 80%;
    margin: 0 auto;
    display: flex;
    justify-content: flex-end;
    gap: 1em;
    font-size: 90%;
  }
  .thumb {
    width: 100px;
    height: 100px;
    overflow: hidden;
  }
  .thumb img {
    object-fit: contain;
    width: 100%;
  }

  .mv {
    height: 20vh;
    display: flex;
    align-items: center;
    padding: 3rem;
    font-size: 200%;
    background-color: cadetblue;
    color: white;
  }

  .tags {
    display: flex;
    gap: 15px;
  }

  .mini-tag {
    text-decoration: none;
    color: #333;
    border: solid 1px #555;
    border-radius: 0.4em;
    font-size: 80%;
    padding: 0.2em .8em;
  }

</style>

